breakfastOrder outString(breakfastItem[20] @ str1, breakfastItem[30] @ str2)
{
    serveOut("You Entered: ");
    serveOut(str1);
    serveOut(" and ");
    serveOut(str2);

    //No return type`
    orderUp;
}

breakfastOrder getString() orderOf breakfastItem[20]
{
  orderUp "Hello World";
}

breakfastOrder main() orderOf wholeMilk
{
  //Declarations and assignments
  breakfastItem[40] @ string1;
  breakfastItem[15] @ string2;
  breakfastItem[50] @ instString;
  breakfastItem[25] @ inst2String;
  wholeMilk @ g;
  percentMilk @ p;

  //Print to standard out
  serveOut(instString);

  //Read input from standard in stream
  string1 <- orderIn(10);

  //Second string
  serveOut(inst2String);
  string2 <- orderIn(10);
  string1 <- getString();
  //Call function

  //Make array small enough to pass
  breakfastItem[20] @ passString;
  roll(g: 0->19 stepBy 1)
  {
    passString[g] <- string1[g];
  }
  serveOut(p);
  outString(passString, string2);
  orderUp 0;
}
